{"version":3,"sources":["components/app-header/index.js","components/search-panel/index.js","components/todo-list-item/index.js","components/todo-list/index.js","components/item-status-filter/index.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","setState","target","value","props","type","onChange","this","placeholder","Component","TodoListItem","label","onDeleted","important","onToggleDone","onToggleImportant","classNames","match","onClick","TodoList","todos","elements","map","id","itemProps","ItemStatusFilter","buttons","name","filter","filterType","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAdded","App","maxId","todoData","createTodoItem","deleteItem","indx","findIndex","el","slice","addItem","text","newItem","toggleProperty","array","propName","oldItem","items","length","item","toLowerCase","indexOf","res","visibleItems","search","doneCount","toDoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a011fb5d.chunk.js","sourcesContent":["import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo List</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n    )\n}\n\nexport default AppHeader;","import React, {Component} from 'react';\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n    state = {\n        term: ''\n    }\n\n    onSearchChange = (e) => {\n        this.setState({\n            term: e.target.value\n        })\n        this.props.onSearchChange(e.target.value)\n    }\n\n    render() {\n        return (\n                <input type=\"text\" onChange={this.onSearchChange}\n                       className=\"form-control search-input\"\n                       placeholder=\"type to search\"\n                value={this.state.term}/>\n        );\n    }\n\n}","import React, {Component} from 'react';\nimport './todo-list-item.css';\n\nclass TodoListItem extends Component {\n\n    render() {\n        const { label, onDeleted, done, important, onToggleDone, onToggleImportant, match } = this.props;\n\n        let classNames = 'todo-list-item';\n        if (done) {\n            classNames += ' done';\n        }\n        if (important) {\n            classNames += ' important';\n        }\n\n        if (match) {\n            classNames += ' search';\n        }\n\n        return (\n            <span className={classNames}>\n      <span\n          className=\"todo-list-item-label\"\n          onClick={onToggleDone}>\n        {label}\n      </span>\n\n      <button type=\"button\" onClick={onToggleImportant}\n              className=\"btn btn-outline-success btn-sm float-right\">\n        <i className=\"fa fa-exclamation\"/>\n      </button>\n\n      <button type=\"button\" onClick={onDeleted}\n\n              className=\"btn btn-outline-danger btn-sm float-right\">\n        <i className=\"fa fa-trash-o\"/>\n      </button>\n    </span>\n        );\n    }\n}\n\nexport default TodoListItem;","import React from 'react';\nimport TodoListItem from \"../todo-list-item\";\nimport './todo-list.css'\n\n\nconst TodoList = ({todos, onDeleted, onToggleDone, onToggleImportant}) => {\n\n    const elements = todos.map(({id, ...itemProps}) => <li className='list-group-item' key={id}>\n        <TodoListItem onToggleDone={() => onToggleDone(id)}\n                      onToggleImportant={() => onToggleImportant(id)}\n                      onDeleted={ () => onDeleted(id)   } {...itemProps}/></li>)\n    return (\n        <ul className='list-group todo-list'>\n            {elements}\n        </ul>\n    )\n}\n\nexport default TodoList;","import React, {Component} from 'react';\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        {name: 'all', label: 'All'},\n        {name: 'active', label: 'Active'},\n        {name: 'done', label: 'Done'},\n    ];\n\n    render() {\n        const { filter } = this.props;\n        const buttons = this.buttons.map(({name, label}) => <button type=\"button\"\n                                                                    key={name}\n                                                                    className={`btn ${name === filter ? 'btn-info' : 'btn-outline-secondary'}`}\n                                                                    onClick={() => {this.props.filterType(name)}}>{label}</button>)\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        );\n    }\n}\n","import ItemAddForm from \"./item-add-form\";\n\nexport default ItemAddForm;","import React, {Component} from 'react';\nimport './item-add-form.css';\n\nclass ItemAddForm extends Component {\n\n    state = {\n        label: ''\n    }\n\n    onLabelChange = (e) => {\n        this.setState({\n            label: e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        this.props.onAdded(this.state.label);\n        this.setState({\n            label: ''\n        })\n    }\n    render() {\n\n        return (\n            <form className='item-add-form d-flex' onSubmit={this.onSubmit}>\n                <input type=\"text\" className='form-control' onChange={this.onLabelChange} placeholder='What needs to be done'\n                value={this.state.label}/>\n                <button className='btn btn-outline-secondary'>\n                    Add Item\n                </button>\n            </form>\n\n        );\n    }\n}\n\nexport default ItemAddForm;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport AppHeader from \"./components/app-header\";\nimport SearchPanel from \"./components/search-panel\";\nimport TodoList from \"./components/todo-list\";\nimport ItemStatusFilter from \"./components/item-status-filter\";\nimport BtnAdd from \"./components/item-add-form\";\n\nclass App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make awesome App'),\n            this.createTodoItem('Have a lunch'),\n        ],\n        term: '',\n        filter: 'all'\n    }\n    createTodoItem (label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++,\n            match: false\n        }\n    }\n\n    deleteItem = (id) => {\n        this.setState(({todoData}) => {\n            const indx = todoData.findIndex(el => el.id === id);\n            const newArray = [...todoData.slice(0, indx), ...todoData.slice(indx + 1)];\n            return {\n                todoData: newArray\n            }\n        })\n    }\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text)\n        this.setState(({todoData}) => {\n           return {\n               todoData: [...todoData, newItem]\n           }\n        })\n    }\n\n    toggleProperty(array, id, propName) {\n            const indx = array.findIndex(el => el.id === id);\n            const oldItem = array[indx];\n            const newItem = {...oldItem, [propName]: !oldItem[propName]};\n            return [...array.slice(0, indx), newItem, ...array.slice(indx + 1)]\n    }\n    onToggleImportant = (id) => {\n        this.setState(({todoData}) => {\n            return {\n               todoData: this.toggleProperty(todoData, id, 'important')\n            }\n        })\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            }\n        })\n    }\n\n    onSearchChange = (term) => {\n        this.setState({ term })\n    }\n\n    search(items, term) {\n        if (term.length === 0 ) {\n            return items;\n        }\n        return items.filter(item => item.label.toLowerCase().indexOf(term.toLowerCase()) > -1)\n    }\n\n    filter(items, filter) {\n        let res;\n        switch (filter) {\n            case 'done' :res = items.filter(item => item.done) || items;\n            break;\n            case 'active' : res = items.filter(item => !item.done) || items;\n            break;\n            case 'all' : res = items;\n                break;\n            default: return items;\n        }\n        return res;\n    }\n\n    filterType = (filter) => {\n        this.setState({filter})\n    }\n\n    render () {\n        const { todoData, term, filter } = this.state;\n\n        const visibleItems = this.filter(this.search(todoData, term), filter);\n        const doneCount = todoData.filter(el => el.done).length;\n        const toDoCount = todoData.filter(el => el.done !== true).length;\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={toDoCount} done={doneCount}/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\n                    <ItemStatusFilter filter={filter} filterType={this.filterType}/>\n                </div>\n                <TodoList onDeleted={this.deleteItem} todos={visibleItems}  onToggleDone={this.onToggleDone} onToggleImportant={this.onToggleImportant}/>\n                <BtnAdd onAdded={this.addItem}/>\n            </div>\n        )\n    }\n}\n\n\nReactDOM.render(\n   <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}